<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveActiveFile</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wKU
require ENV['TM_SUPPORT_PATH'] + '/lib/escape.rb'
file_path = ENV['TM_DIRECTORY']
current_file = File.basename(ENV['TM_FILEPATH'])
chapter_file = current_file.chomp(File.extname(current_file) ) + ".pdf"

def find_directory
  files = [ ENV['TM_SELECTED_FILE'], ENV['TM_FILEPATH'], ENV['TM_DIRECTORY'], ENV['TM_PROJECT_DIRECTORY'], ENV['HOME'] ]
  res = files.find { |file| file &amp;&amp; File.exists?(file) }
  res &amp;&amp; File.file?(res) ? File.split(res).first : res
end

def is_running(process)
  all = `ps -U "$USER" -o ucomm`
  all.to_a[1..-1].find { |cmd| process == cmd.strip }
end

def terminal_script(dir, chapter_file)
  return &lt;&lt;-APPLESCRIPT
    tell application "Terminal"
      activate
      do script "cd #{e_as(e_sh(dir))}; ./rake #{e_as(e_sh(chapter_file))}; open /Applications/Preview.app/ #{e_as(e_sh(chapter_file))}"
    end tell
APPLESCRIPT
end


if dir = find_directory
  script = nil
  script = terminal_script(dir, chapter_file)
  open("|osascript", "w") { |io| io &lt;&lt; script }
end

</string>
	<key>input</key>
	<string>none</string>
	<key>keyEquivalent</key>
	<string>@C</string>
	<key>name</key>
	<string>View Chapter as PDF</string>
	<key>output</key>
	<string>discard</string>
	<key>scope</key>
	<string>text.xml.pragmatic</string>
	<key>uuid</key>
	<string>EB61B793-509A-46B3-9A90-FB118C06F141</string>
</dict>
</plist>
