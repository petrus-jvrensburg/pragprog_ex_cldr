## lib/ritex/mathml/entities.rb -- MathML conversions of TeX
## entities. See Ritex::MathML.
##
## Author::    William Morgan (mailto: wmorgan-ritex@masanjin.net)
## Copyright:: Copyright 2005 William Morgan
## License::   GNU GPL version 2

## The main module for everything Ritex-related. See Ritex::Parser.
module Ritex

## As many MathML-specific aspected of Ritex are stored in this module
## as possible. Note that the rdoc documentation for this module is woefully
## incorrect because we programmatically modify the globals in this package.
module MathML

## Default entities, mostly stolen from
## http://www.orcca.on.ca/mathml/texmml/texmml.xml. We overwrite many
## of these below.
DEFAULTS = {
  "&" => "<mo>&amp;</mo>",
  "," => "<mo>&#x2009;</mo>",
  "=" => "<mo>=</mo>",
  "AA" => "<mo>&#x00C5;</mo>",
  "aa" => "<mo>&#x00E5;</mo>",
  "AE" => "<mo>&#x00C6;</mo>",
  "ae" => "<mo>&#x00E6;</mo>",
  "aleph" => "<mo>&#x2135;</mo>",
  "amalg" => "<mo>&#x2210;</mo>",
  "angle" => "<mo>&#x2220;</mo>",
  "approx" => "<mo>&#x2248;</mo>",
  "approxeq" => "<mo>&#x224A;</mo>",
  "arccos" => "<mi>arccos</mi>",
  "arcsin" => "<mi>arcsin</mi>",
  "arctan" => "<mi>arctan</mi>",
  "arg" => "<mi>arg</mi>",
  "arrowvert" => "<mo>&#x2223;</mo>",
  "Arrowvert" => "<mo>&#x2225;</mo>",
  "ast" => "<mo>*</mo>",
  "asymp" => "<mo>&#x224D;</mo>",
  "backepsilon" => "<mo>&#x220B;</mo>",
  "backprime" => "<mo>&#x2035;</mo>",
  "backsim" => "<mo>&#x223D;</mo>",
  "backsimeq" => "<mo>&#x22CD;</mo>",
  "backslash" => "<mo>\\</mo>",
  "barwedge" => "<mo>&#x22BC;</mo>",
  "because" => "<mo>&#x2235;</mo>",
  "beth" => "<mo>&#x2136;</mo>",
  "between" => "<mo>&#x226C;</mo>",
  "bigcap" => "<mo>&#x2229;</mo>",
  "bigcirc" => "<mo>&#x25EF;</mo>",
  "bigcup" => "<mo>&#x222A;</mo>",
  "bigodot" => "<mo>&#x2299;</mo>",
  "bigoplus" => "<mo>&#x2295;</mo>",
  "bigotimes" => "<mo>&#x2297;</mo>",
  "bigsqcup" => "<mo>&#x2294;</mo>",
  "bigstar" => "<mo>&#x2605;</mo>",
  "bigtriangledown" => "<mo>&#x25BD;</mo>",
  "bigtriangleup" => "<mo>&#x25B3;</mo>",
  "biguplus" => "<mo>&#x228E;</mo>",
  "bigvee" => "<mo>&#x22C1;</mo>",
  "bigwedge" => "<mo>&#x22C0;</mo>",
  "blacklozenge" => "<mo>&#x25CA;</mo>",
  "blacksquare" => "<mo>&#x25A0;</mo>",
  "blacktriangle" => "<mo>&#x25B2;</mo>",
  "blacktriangledown" => "<mo>&#x25BC;</mo>",
  "blacktriangleleft" => "<mo>&#x25C0;</mo>",
  "blacktriangleright" => "<mo>&#x25B6;</mo>",
  "bmod" => "<mi>mod</mi>",
  "bot" => "<mo>&#x03A5;</mo>",
  "bowtie" => "<mo>&#x22C8;</mo>",
  "Box" => "<mo>&#x25AB;</mo>",
  "boxdot" => "<mo>&#x22A1;</mo>",
  "boxminus" => "<mo>&#x229F;</mo>",
  "boxplus" => "<mo>&#x229E;</mo>",
  "boxtimes" => "<mo>&#x22A0;</mo>",
  "bracevert" => "<mo mathvariant='bold'>&#x2223;</mo>",
  "bull" => "<mo>&#x25AA;</mo>",
  "bullet" => "<mo>&#x2219;</mo>",
  "Bumpeq" => "<mo>&#x224E;</mo>",
  "bumpeq" => "<mo>&#x224F;</mo>",
  "cap" => "<mo>&#x2229;</mo>",
  "Cap" => "<mo>&#x22D2;</mo>",
  "cdot" => "<mo>&#x22C5;</mo>",
  "cdots" => "<mo>&#x22EF;</mo>",
  "centerdot" => "<mo>&#x22C5;</mo>",
  "cents" => "<mo>&#x00A2;</mo>",
  "circ" => "<mo>&#x2218;</mo>",
  "circeq" => "<mo>&#x2257;</mo>",
  "circlearrowleft" => "<mo>&#x21BA;</mo>",
  "circlearrowright" => "<mo>&#x21BB;</mo>",
  "circledast" => "<mo>&#x229B;</mo>",
  "circledcirc" => "<mo>&#x229A;</mo>",
  "circleddash" => "<mo>&#x229D;</mo>",
  "circledS" => "<mo>&#x24C8;</mo>",
  "clubsuit" => "<mo>&#x2663;</mo>",
  "colon" => "<mo>:</mo>",
  "complement" => "<mo>&#x2201;</mo>",
  "cong" => "<mo>&#x2245;</mo>",
  "coprod" => "<mo>&#x2210;</mo>",
  "copyright" => "<mo>&#x00A9;</mo>",
  "cos" => "<mi>cos</mi>",
  "cosh" => "<mi>cosh</mi>",
  "cot" => "<mi>cot</mi>",
  "coth" => "<mi>coth</mi>",
  "csc" => "<mi>csc</mi>",
  "cup" => "<mo>&#x222A;</mo>",
  "Cup" => "<mo>&#x22D3;</mo>",
  "curlyeqprec" => "<mo>&#x22DE;</mo>",
  "curlyeqsucc" => "<mo>&#x22DF;</mo>",
  "curlyvee" => "<mo>&#x22CF;</mo>",
  "curlywedge" => "<mo>&#x22CF;</mo>",
  "curvearrowleft" => "<mo>&#x21B6;</mo>",
  "curvearrowright" => "<mo>&#x21B7;</mo>",
  "dag" => "<mo>&#x2020;</mo>",
  "dagger" => "<mo>&#x2020;</mo>",
  "daleth" => "<mo>&#x2138;</mo>",
  "dashleftarrow" => "<mo>&#x21E0;</mo>",
  "dashrightarrow" => "<mo>&#x21E2;</mo>",
  "dashv" => "<mo>&#x22A3;</mo>",
  "ddag" => "<mo>&#x2021;</mo>",
  "ddagger" => "<mo>&#x2021;</mo>",
  "ddots" => "<mo>&#x22F1;</mo>",
  "deg" => "<mi>deg</mi>",
  "det" => "<mi>det</mi>",
  "diamond" => "<mo>&#x22C4;</mo>",
  "Diamond" => "<mo>&#x25CA;</mo>",
  "diamondsuit" => "<mo>&#x2666;</mo>",
  "digamma" => "<mo>&#x03DC;</mo>",
  "dim" => "<mi>dim</mi>",
  "div" => "<mo>&#x00F7;</mo>",
  "divideontimes" => "<mo>&#x22C7;</mo>",
  "doteq" => "<mo>&#x2250;</mo>",
  "doteqdot" => "<mo>&#x2251;</mo>",
  "dotplus" => "<mo>&#x2214;</mo>",
  "dots" => "<mo>&#x22EF;</mo>",
  "dotsb" => "<mo>&#x22EF;</mo>",
  "dotsc" => "<mo>&#x2026;</mo>",
  "dotsi" => "<mo>&#x22EF;</mo>",
  "dotsm" => "<mo>&#x22EF;</mo>",
  "dotso" => "<mo>&#x22EF;</mo>",
  "doublebarwedge" => "<mo>&#x2306;</mo>",
  "downarrow" => "<mo>&#x2193;</mo>",
  "Downarrow" => "<mo>&#x21D3;</mo>",
  "downdownarrows" => "<mo>&#x21CA;</mo>",
  "downharpoonleft" => "<mo>&#x21C3;</mo>",
  "ell" => "<mo>&#x2113;</mo>",
  "emptyset" => "<mo>&#x2205;</mo>",
  "eqcirc" => "<mo>&#x2256;</mo>",
  "eqslantgtr" => "<mo>&#x22DD;</mo>",
  "eqslantgtr" => "<mo>&#x2A96;</mo>",
  "eqslantless" => "<mo>&#x2A95;</mo>",
  "equiv" => "<mo>&#x224D;</mo>",
  "eth" => "<mo>&#x00F0;</mo>",
  "exists" => "<mo>&#x2203;</mo>",
  "exp" => "<mi>exp</mi>",
  "fallingdotseq" => "<mo>&#x2252;</mo>",
  "Finv" => "<mo>&#x2132;</mo>",
  "flat" => "<mo>&#x266D;</mo>",
  "forall" => "<mo>&#x2200;</mo>",
  "frown" => "<mo>&#x2322;</mo>",
  "gcd" => "<mi>gcd</mi>",
  "ge" => "<mo>&#x2265;</mo>",
  "geq" => "<mo>&#x2265;</mo>",
  "geqq" => "<mo>&#x2267;</mo>",
  "geqslant" => "<mo>&#x2A7E;</mo>",
  "gets" => "<mo>&#x2190;</mo>",
  "gg" => "<mo>&#x226B;</mo>",
  "ggg" => "<mo>&#x22D9;</mo>",
  "gimel" => "<mo>&#x2137;</mo>",
  "gnapprox" => "<mo>&#x2A8A;</mo>",
  "gneq" => "<mo>&#x2A88;</mo>",
  "gneqq" => "<mo>&#x2269;</mo>",
  "gnsim" => "<mo>&#x22E7;</mo>",
  "gtrapprox" => "<mo>&#x2A86;</mo>",
  "gtrdot" => "<mo>&#x22D7;</mo>",
  "gtreqless" => "<mo>&#x22DB;</mo>",
  "gtreqqless" => "<mo>&#x2A8C;</mo>",
  "gtrless" => "<mo>&#x2277;</mo>",
  "gtrsim" => "<mo>&#x2273;</mo>",
  "hbar" => "<mo>&#x0127;</mo>",
  "heartsuit" => "<mo>&#x2665;</mo>",
  "hom" => "<mi>hom</mi>",
  "hookleftarrow" => "<mo>&#x21A9;</mo>",
  "hookrightarrow" => "<mo>&#x21AA;</mo>",
  "hslash" => "<mo>&#x210F;</mo>",
  "i" => "<mo>&#x0131;</mo>",
  "idotsint" => "<mo>&#x222B;</mo>",
  "iff" => "<mo>&#x21D4;</mo>",
  "iiiint" => "<mo>&#x2A0C;</mo>",
  "iiint" => "<mo>&#x222D;</mo>",
  "iint" => "<mo>&#x222C;</mo>",
  "Im" => "<mo>&#x2111;</mo>",
  "imath" => "<mo>&#x2373;</mo>",
  "implies" => "<mo>&#x21D2;</mo>",
  "in" => "<mo>&#x2208;</mo>",
  "inf" => "<mi>inf</mi>",
  "infty" => "<mo>&#x221E;</mo>",
  "injlim" => "<mo>inj lim</mo>",
  "int" => "<mo>&#x222B;</mo>",
  "intercal" => "<mo>&#x22BA;</mo>",
  "j" => "<mo>&#x006A;</mo>",
  "jmath" => "<mo>&#x006A;</mo>",
  "Join" => "<mo>&#x22C8;</mo>",
  "ker" => "<mi>ker</mi>",
  "L" => "<mo>&#x0141;</mo>",
  "l" => "<mo>&#x0142;</mo>",
  "land" => "<mo>&#x2227;</mo>",
  "langle" => "<mo>&#x2329;</mo>",
  "lbrace" => "<mo>{</mo>",
  "lbrack" => "<mo>[</mo>",
  "lceil" => "<mo>&#x2308;</mo>",
  "ldots" => "<mo>&#x2026;</mo>",
  "le" => "<mo>&#x2264;</mo>",
  "leadsto" => "<mo>&#x21DD;</mo>",
  "leftarrow" => "<mo>&#x2190;</mo>",
  "Leftarrow" => "<mo>&#x21D0;</mo>",
  "leftarrowfill" => "<mo stretchy='true'>&#x2190;</mo>",
  "leftarrowtail" => "<mo>&#x21A2;</mo>",
  "leftharpoondown" => "<mo>&#x21BD;</mo>",
  "leftharpoonup" => "<mo>&#x21BC;</mo>",
  "leftleftarrows" => "<mo>&#x21C7;</mo>",
  "leftrightarrow" => "<mo>&#x21C6;</mo>",
  "Leftrightarrow" => "<mo>&#x21D4;</mo>",
  "leftrightarrows" => "<mo>&#x21C6;</mo>",
  "leftrightharpoons" => "<mo>&#x21CB;</mo>",
  "leftrightsquigarrow" => "<mo>&#x21AD;</mo>",
  "leftthreetimes" => "<mo>&#x22CB;</mo>",
  "leq" => "<mo>&#x2264;</mo>",
  "leqq" => "<mo>&#x2266;</mo>",
  "leqslant" => "<mo>&#x2A7D;</mo>",
  "lessapprox" => "<mo>&#x2A85;</mo>",
  "lessdot" => "<mo>&#x22D6;</mo>",
  "lesseqgtr" => "<mo>&#x22DA;</mo>",
  "lesseqqgtr" => "<mo>&#x2A8B;</mo>",
  "lessgtr" => "<mo>&#x2276;</mo>",
  "lesssim" => "<mo>&#x2272;</mo>",
  "lfloor" => "<mo>&#x230A;</mo>",
  "lg" => "<mi>lg</mi>",
  "lgroup" => "<mo>(</mo>",
  "lhd" => "<mo>&#x22B2;</mo>",
  "lim" => "<mi>lim</mi>",
  "liminf" => "<mi>lim inf</mi>",
  "limsup" => "<mi>lim sum</mi>",
  "ll" => "<mo>&#x226A;</mo>",
  "llcorner" => "<mo>&#x231E;</mo>",
  "Lleftarrow" => "<mo>&#x21DA;</mo>",
  "lll" => "<mo>&#x22D8;</mo>",
  "lmoustache" => "<mo>&#x23B0;</mo>",
  "ln" => "<mi>ln</mi>",
  "lnapprox" => "<mo>&#x2A89;</mo>",
  "lneq" => "<mo>&#x2A87;</mo>",
  "lneqq" => "<mo>&#x2268;</mo>",
  "lnot" => "<mo>&#x2310;</mo>",
  "lnsim" => "<mo>&#x22E6;</mo>",
  "log" => "<mi>log</mi>",
  "longleftarrow" => "<mo>&#x2190;</mo>",
  "Longleftarrow" => "<mo>&#x21D0;</mo>",
  "longleftrightarrow" => "<mo>&#x2194;</mo>",
  "Longleftrightarrow" => "<mo>&#x21D4;</mo>",
  "longmapsto" => "<mo>&#x21A6;</mo>",
  "longrightarrow" => "<mo>&#x2192;</mo>",
  "Longrightarrow" => "<mo>&#x21D2;</mo>",
  "looparrowleft" => "<mo>&#x21AB;</mo>",
  "looparrowright" => "<mo>&#x21AC;</mo>",
  "lor" => "<mo>&#x2228;</mo>",
  "lozenge" => "<mo>&#x25CA;</mo>",
  "lrcorner" => "<mo>&#x231F;</mo>",
  "Lsh" => "<mo>&#x21B0;</mo>",
  "ltimes" => "<mo>&#x22C9;</mo>",
  "lVert" => "<mo form='prefix'>&#x2016;</mo>",
  "lvert" => "<mo form='prefix'>|</mo>",
  "mapsto" => "<mo>&#x21A6;</mo>",
  "max" => "<mi>max</mi>",
  "measuredangle" => "<mo>&#x2221;</mo>",
  "mho" => "<mo>&#x2127;</mo>",
  "mid" => "<mo>&#x2223;</mo>",
  "min" => "<mi>min</mi>",
  "mod" => "<mi lspace='1em'>mod</mi>",
  "models" => "<mo>&#x22A7;</mo>",
  "mp" => "<mo>&#x00B1;</mo>",
  "multimap" => "<mo>&#x22B8;</mo>",
  "nabla" => "<mo>&#x2207;</mo>",
  "natural" => "<mo>&#x266E;</mo>",
  "ncong" => "<mo>&#x2247;</mo>",
  "ne" => "<mo>&#x2260;</mo>",
  "nearrow" => "<mo>&#x2197;</mo>",
  "neg" => "<mo>&#x00AC;</mo>",
  "neq" => "<mo>&#x2260;</mo>",
  "nexists" => "<mo>&#x2204;</mo>",
  "ngeq" => "<mo>&#x2271;</mo>",
  "ngtr" => "<mo>&#x226F;</mo>",
  "ni" => "<mo>&#x220B;</mo>",
  "nleftarrow" => "<mo>&#x219A;</mo>",
  "nLeftarrow" => "<mo>&#x21CD;</mo>",
  "nleftrightarrow" => "<mo>&#x21AE;</mo>",
  "nLeftrightarrow" => "<mo>&#x21CE;</mo>",
  "nleq" => "<mo>&#x2270;</mo>",
  "nless" => "<mo>&#x226E;</mo>",
  "nmid" => "<mo>&#x2224;</mo>",
  "nobreakdash" => "<mo>&#x2011;</mo>",
  "notin" => "<mo>&#x2209;</mo>",
  "nparallel" => "<mo>&#x2226;</mo>",
  "nrightarrow" => "<mo>&#x219B;</mo>",
  "nRightarrow" => "<mo>&#x21CF;</mo>",
  "nshortparallel" => "<mo>&#x2226;</mo>",
  "nsim" => "<mo>&#x2241;</mo>",
  "nsubseteq" => "<mo>&#x2288;</mo>",
  "nsupseteq" => "<mo>&#x2289;</mo>",
  "nsupseteq" => "<mo>&#x2289;</mo>",
  "ntriangleleft" => "<mo>&#x22EA;</mo>",
  "ntrianglelefteq" => "<mo>&#x22EC;</mo>",
  "ntrianglelefteq" => "<mo>&#x22EC;</mo>",
  "ntriangleright" => "<mo>&#x22EB;</mo>",
  "ntrianglerighteq" => "<mo>&#x22ED;</mo>",
  "nvdash" => "<mo>&#x22AC;</mo>",
  "nvDash" => "<mo>&#x22AD;</mo>",
  "nVDash" => "<mo>&#x22AF;</mo>",
  "nwarrow" => "<mo>&#x2196;</mo>",
  "O" => "<mo>&#x00D8;</mo>",
  "o" => "<mo>&#x00F8;</mo>",
  "odot" => "<mo>&#x2299;</mo>",
  "OE" => "<mo>&#x0152;</mo>",
  "oe" => "<mo>&#x0153;</mo>",
  "oint" => "<mo>&#x222E;</mo>",
  "ominus" => "<mo>&#x2296;</mo>",
  "oplus" => "<mo>&#x2295;</mo>",
  "oslash" => "<mo>&#x2298;</mo>",
  "otimes" => "<mo>&#x2297;</mo>",
  "owns" => "<mo>&#x220B;</mo>",
  "P" => "<mo>&#x00B6;</mo>",
  "parallel" => "<mo>&#x2225;</mo>",
  "partial" => "<mo>&#x2202;</mo>",
  "perp" => "<mo>&#x22A5;</mo>",
  "pitchfork" => "<mo>&#x23D4;</mo>",
  "pm" => "<mo>&#x00B1;</mo>",
  "pounds" => "<mo>&#x00A3;</mo>",
  "Pr" => "<mi>Pr</mi>",
  "prec" => "<mo>&#x227A;</mo>",
  "precapprox" => "<mo>&#x2AB7;</mo>",
  "preccurlyeq" => "<mo>&#x227C;</mo>",
  "preceq" => "<mo>&#x227C;</mo>",
  "precnapprox" => "<mo>&#x2AB9;</mo>",
  "precnsim" => "<mo>&#x22E8;</mo>",
  "precsim" => "<mo>&#x227E;</mo>",
  "prime" => "<mo>&#x2032;</mo>",
  "prod" => "<mo>&#x220F;</mo>",
  "projlim" => "<mo>proj lim</mo>",
  "propto" => "<mo>&#x221D;</mo>",
  "qed" => "<mo>&#x25A1;</mo>",
  "rangle" => "<mo>&#x232A;</mo>",
  "rbrace" => "<mo>}</mo>",
  "rbrack" => "<mo>]</mo>",
  "rceil" => "<mo>&#x2309;</mo>",
  "Re" => "<mo>&#x211C;</mo>",
  "rfloor" => "<mo>&#x230B;</mo>",
  "rgroup" => "<mo>)</mo>",
  "rhd" => "<mo>&#x22B3;</mo>",
  "rightarrow" => "<mo>&#x2192;</mo>",
  "Rightarrow" => "<mo>&#x21D2;</mo>",
  "rightarrowfill" => "<mo stretchy='true'>&#x2192;</mo>",
  "rightarrowtail" => "<mo>&#x21A3;</mo>",
  "rightharpoondown" => "<mo>&#x21C1;</mo>",
  "rightharpoonup" => "<mo>&#x21C0;</mo>",
  "rightleftarrows" => "<mo>&#x21C4;</mo>",
  "rightleftharpoons" => "<mo>&#x21CC;</mo>",
  "rightleftharpoons" => "<mo>&#x21CC;</mo>",
  "rightrightarrows" => "<mo>&#x21C9;</mo>",
  "rightsquigarrow" => "<mo>&#x21DD;</mo>",
  "rightthreetimes" => "<mo>&#x22CC;</mo>",
  "risingdotseq" => "<mo>&#x2253;</mo>",
  "rmoustache" => "<mo>&#x23B1;</mo>",
  "Rsh" => "<mo>&#x21B1;</mo>",
  "rtimes" => "<mo>&#x22CA;</mo>",
  "rVert" => "<mo form='postfix'>&#x2016;</mo>",
  "rvert" => "<mo form='postfix'>|</mo>",
  "S" => "<mo>&#x00A7;</mo>",
  "searrow" => "<mo>&#x2198;</mo>",
  "sec" => "<mi>sec</mi>",
  "setminus" => "<mo>&#x2216;</mo>",
  "sharp" => "<mo>&#x266F;</mo>",
  "shortmid" => "<mo>&#x2223;</mo>",
  "shortparallel" => "<mo>&#x2225;</mo>",
  "sim" => "<mo>&#x223C;</mo>",
  "simeq" => "<mo>&#x2243;</mo>",
  "sin" => "<mi>sin</mi>",
  "sinh" => "<mi>sin</mi>",
  "smallfrown" => "<mo>&#x2322;</mo>",
  "smallsetminus" => "<mo>&#x2216;</mo>",
  "smallsmile" => "<mo>&#x2323;</mo>",
  "smile" => "<mo>&#x2323;</mo>",
  "spadesuit" => "<mo>&#x2660;</mo>",
  "sphericalangle" => "<mo>&#x2222;</mo>",
  "sqcap" => "<mo>&#x2293;</mo>",
  "sqcup" => "<mo>&#x2294;</mo>",
  "sqsubset" => "<mo>&#x228F;</mo>",
  "sqsubseteq" => "<mo>&#x2291;</mo>",
  "sqsupset" => "<mo>&#x2290;</mo>",
  "sqsupseteq" => "<mo>&#x2292;</mo>",
  "square" => "<mo>&#x25A1;</mo>",
  "SS" => "<mo>&#x00DF;</mo>",
  "star" => "<mo>&#x22C6;</mo>",
  "subset" => "<mo>&#x2282;</mo>",
  "Subset" => "<mo>&#x22D0;</mo>",
  "subseteq" => "<mo>&#x2286;</mo>",
  "subseteqq" => "<mo>&#x2AC5;</mo>",
  "subsetneq" => "<mo>&#x228A;</mo>",
  "subsetneqq" => "<mo>&#x2ACB;</mo>",
  "succ" => "<mo>&#x227B;</mo>",
  "succapprox" => "<mo>&#x2AB8;</mo>",
  "succcurlyeq" => "<mo>&#x227D;</mo>",
  "succeq" => "<mo>&#x227D;</mo>",
  "succnapprox" => "<mo>&#x2ABA;</mo>",
  "succnsim" => "<mo>&#x22E9;</mo>",
  "succsim" => "<mo>&#x227F;</mo>",
  "sum" => "<mo>&#x02211;</mo>",
  "sup" => "<mi>sup</mi>",
  "supset" => "<mo>&#x2283;</mo>",
  "Supset" => "<mo>&#x22D1;</mo>",
  "supseteq" => "<mo>&#x2287;</mo>",
  "supseteqq" => "<mo>&#x2AC6;</mo>",
  "supsetneq" => "<mo>&#x228B;</mo>",
  "supsetneqq" => "<mo>&#x2ACC;</mo>",
  "surd" => "<mo>&#x221A;</mo>",
  "swarrow" => "<mo>&#x2199;</mo>",
  "tan" => "<mi>tan</mi>",
  "tanh" => "<mi>tanh</mi>",
  "therefore" => "<mo>&#x2234;</mo>",
  "thickapprox" => "<mo>&#x2248;</mo>",
  "thicksim" => "<mo>&#x223C;</mo>",
  "thinspace" => "<mo>&#x2009;</mo>",
  "times" => "<mo>&#x00D7;</mo>",
  "to" => "<mo>&#x2192;</mo>",
  "top" => "<mo>&#x03A4;</mo>",
  "triangle" => "<mo>&#x25B3;</mo>",
  "triangledown" => "<mo>&#x25BD;</mo>",
  "triangleleft" => "<mo>&#x25C5;</mo>",
  "trianglelefteq" => "<mo>&#x22B4;</mo>",
  "triangleq" => "<mo>&#x225C;</mo>",
  "triangleright" => "<mo>&#x25BB;</mo>",
  "trianglerighteq" => "<mo>&#x22B5;</mo>",
  "twoheadleftarrow" => "<mo>&#x219E;</mo>",
  "twoheadrightarrow" => "<mo>&#x21A0;</mo>",
  "ulcorner" => "<mo>&#x231C;</mo>",
  "unlhd" => "<mo>&#x22B4;</mo>",
  "unrhd" => "<mo>&#x22B5;</mo>",
  "uparrow" => "<mo>&#x2191;</mo>",
  "Uparrow" => "<mo>&#x21D1;</mo>",
  "updownarrow" => "<mo>&#x21C5;</mo>",
  "Updownarrow" => "<mo>&#x21D5;</mo>",
  "upharpoonleft" => "<mo>&#x21BF;</mo>",
  "upharpoonright" => "<mo>&#x21BE;</mo>",
  "uplus" => "<mo>&#x228E;</mo>",
  "upuparrows" => "<mo>&#x21C8;</mo>",
  "urcorner" => "<mo>&#x231D;</mo>",
  "varkappa" => "<mo>&#x03F0;</mo>",
  "varnothing" => "<mo>&#x00D8;</mo>",
  "varpropto" => "<mo>&#x221D;</mo>",
  "vartriangle" => "<mo>&#x25B3;</mo>",
  "vartriangleleft" => "<mo>&#x22B2;</mo>",
  "vartriangleright" => "<mo>&#x22B3;</mo>",
  "vdash" => "<mo>&#x22A2;</mo>",
  "Vdash" => "<mo>&#x22A9;</mo>",
  "vdots" => "<mo>&#x22EE;</mo>",
  "vee" => "<mo>&#x2228;</mo>",
  "veebar" => "<mo>&#x22BB;</mo>",
  "vert" => "<mo>&#x2223;</mo>",
  "Vert" => "<mo>&#x2225;</mo>",
  "Vvdash" => "<mo>&#x22AA;</mo>",
  "wedge" => "<mo>&#x2227;</mo>",
  "wp" => "<mo>&#x2118;</mo>",
  "wr" => "<mo>&#x2240;</mo>",
  "{" => %!<mo>{</mo><mspace width="thinmathspace"/>!,
  "}" => %!<mspace width="thinmathspace"/><mo>}</mo>!,
}

## Generate a hash table of entities from a shorthand version
## involving a hash table and an array.
##
## _element_:: the HTML element to wrap the entities with
## _opts_:: arguments to the opening HTML element
def generate(element, opts, hash={}, array=[])
  ret = {}

  endt = "</#{element}>"
  startt =
    unless opts.nil? || opts.empty?
      "<#{element} #{opts}>"
    else
      "<#{element}>"
    end

  array.each do |e|
    if Array === e
      e.each { |i| ret[i] = "#{startt}&#{e.last};#{endt}" }
    else
      ret[e] = "#{startt}&#{e};#{endt}"
    end
  end

  hash.each do |e, v|
    if Array === e
      e.each { |i| ret[i] = "#{startt}&#{v};#{endt}" }
    else
      ret[e] = "#{startt}&#{v};#{endt}"
    end
  end
    
  ret
end
module_function :generate

## numbers
NUMS = generate "mn", "", {
  ["infty", "infinity"] => "#x221e",
}

## greek letters
GREEK = generate "mi", "", {
  "omicron"    => "#x3bf",
  "alpha"      => "#x03B1",
  "beta"       => "#x03B2",
  "gamma"      => "#x03B3",
  "delta"      => "#x03B4",
  "epsilon"    => "#x03B5",
  "varepsilon" => "#x03B5",
  "zeta"       => "#x03B6",
  "eta"        => "#x03B7",
  "theta"      => "#x03B8",
  "vartheta"   => "#x03D1",
  "iota"       => "#x03B9",
  "kappa"      => "#x03BA",
  "lambda"     => "#x3BB",
  "mu"         => "#x03BC",
  "nu"         => "#x03BD",
  "xi"         => "#x03BE",
  "pi"         => "#x03C0",
  "varpi"      => "#x03D6",
  "rho"        => "#x03C1",
  "varrho"     => "#x03F1",
  "sigma"      => "#x03C3",
  "varsigma"   => "#x03C2",
  "tau"        => "#x03C4",
  "upsilon"    => "#x03C5",
  "phi"        => "#x03C6",
  "varphi"     => "#x03D5",
  "chi"        => "#x03C7",
  "psi"        => "#x03C8",
  "omega"      => "#x03C9",
  "Gamma"      => "#x0393",
  "varGamma"   => "#x0393",
  "Delta"      => "#x0394",
  "varDelta"   => "#x0394",
  "Theta"      => "#x0398",
  "varTheta"   => "#x0398",
  "Lambda"     => "#x039B",
  "varLambda"  => "#x039B",
  "Xi"         => "#x039E",
  "varXi"      => "#x039E",
  "Pi"         => "#x03A0",
  "varPi"      => "#x03A0",
  "Sigma"      => "#x03A3",
  "varSigma"   => "#x03A3",
  "Upsilon"    => "#x03A5",
  "varUpsilon" => "#x03A5",
  "Phi"        => "#x03A6",
  "varPhi"     => "#x03A6",
  "Psi"        => "#x03A8",
  "varPsi"     => "#x03A8",
  "Omega"      => "#x03A9",
  "varOmega"   => "#x03A9",
}

%w(Alpha Beta Zeta Eta Iota Kappa Mu Nu Rho Tau).each do |x|
  GREEK[x] = "<mi>&#{x[0].chr};</mi>"
end

## regular operators ("MOL" in itex2MML parlance)
OPERATORS = generate "mo", "",  {
  "bottom" => "#x22a5",
  "neg" => "#00ac",
  "mid" => "#007c",
  "|" => "#x2016",
  ["int", "integral"] => "#x222b",
  ["iint", "doubleintegral"] => "#x222c",
  ["iiint", "tripleintegral"] => "#x222d",
  ["Longleftrightarrow", "iff"] => "#x27f7",
  "Leftrightarrow" => "#x2268",
  ["impliedby", "Leftarrow"] => "#xef4d",
  ["implies", "Rightarrow"] => "#x21d2",
  "hookleftarrow" => "#x22fb",
  ["embedsin", "hookrightarrow"] => "#x225a",
  "longleftarrow" => "#x27f5",
  "longrightarrow" => "#x27f6",
  "leftarrow"  => "#x2190",
  ["to", "rightarrow"] => "#x2192",
  "leftrightarrow" => "#x2194",
  ["mapsto", "map"] => "#x226b",
  ["nearrow", "nearr"] => "#x2197",
  ["nwarrow", "nwarr"] => "#x2196",
  ["searrow", "searr"] => "#x2198",
  ["swarrow", "swarr"] => "#x2199",
  ["neArrow", "neArr"] => "#x2b08",
  ["nwArrow", "nwArr"] => "#x2b09",
  ["seArrow", "seArr"] => "#x2b0a",
  ["swArrow", "swArr"] => "#x2b0b",
  ["downarrow", "darr"] => "#x2193",
  ["uparrow", "uparr"]  => "#x2191",
  ["downuparrow", "updownarrow", "duparr", "updarr"] => "#x2195",
  ["union", "cup"] => "#x222a",
  ["neq", "ne"] => "#x2260",
  ["oint", "contourintegral", "conint"] => "#x222e",
  "times" => "#x00d7",
  "otimes" => "#x2297",
  "oplus" => "#x2295",
  "wedge" => "#x22b2",
  "lfloor" => "#x230a",
  "lceil"  => "#x2308",
  "lang"   => "#x2329",
  "langle" => "#x2329",    # ?? 
  "gt"     => "gt",
  "lt"     => "lt", 
  "subset" => "#x2282", 
  "subseteq" => "#x2286", 
  "prec" => "#x227a", 
  "parallel" => "#x2225", 
  "nparallel" => "#x2226", 
  "perp" => "#x22a5",
  "gg" => "#x226b", 
  "ge" => "#x2265", 
  "le" => "#x2264", 
  "nsubset" => "#x2285", 
  "nsubseteq" => "#x2288",
  "notin" => "#x2209", 
  "ni" => "#x220b",
  "nmid" => "#x2204",
  "preceq" => "#x2aaf",
  "npreceq" => "#x21d2",
  "ll" => "#x226a",
  "ngeq" => "#x2271",
  "nleq" => "#x2270",
  "supset" => "#x2283",
  "supseteq" => "#x2287",
  "approx" => "#x2248",
  "sim" => "#x223c",
  "triangleleft" => "#x25c3",
  "cong" => "#x2245",
  "succ" => "#x227b",
  "nsucc" => "#x2281",
  "ngtr" => "#x226f",
  "nsupset" => "#x2285", 
  "nsupseteq" => "#x2289",
  "propto" => "#x221d",
  "equiv"  => "#x2261",
  "triangleright" => "#x25b9",
  "ncong" => "#x2247",
  "succeq" => "#x2ab0",
  "nsucceq" => "#x2ab0;&#338", 
  "amalg" => "#x2a3f", 
  "setminus" => "#x2216",
  "smallsetminus" => "#x2216",
  "pm" => "#xb1", 
  "circ" => "#x2c6",
  "ltimes" => "#x22c9", 
  "div" => "#xf7", 
  "rtimes" => "#x22ca", 
  "Im" => "#x2111", 
  "bot" => "#x22a5", 
  "emptyset" => "#x2205",
  "prime" => "#x2032",
  "therefore" => "#x2234",
  "flat" => "#x266d", 
  "vee" => "#x2228", 
  "Re" => "#x211c",
  "exists" => "#x2203",
  "hbar" => "#x210f", 
  "because" => "#x2235",
  "sharp" => "#x266f",
  "bullet" => "#2022", 
  "aleph" => "#x2135",
  "nexists" => "#x2204",
  "imath" => "#x131",
  "not" => "#xac", 
  "top" => "#x22a4",
  "wp" => "#x2118", 
  "natural" => "#x266e",
  "square" => "#x25a1", 
  "angle" => "#x2220",
  "forall" => "#x2200", 
  "jmath" => "#x237",
  "partial" => "#x2202",
  "ell" => "#x2113",
  "bigtriangleup" => "#x25b3",
  "bigtriangledown" => "#x25bd",
  "beth" => "#x2136",
  "nprec" => "#x2280",
  "Subset" => "#x22d0"
 } 

## notation ("MO")
NOTATION = generate "mo", "",  {
  "cdot" => "#183",
  "ddots" => "#x22f1",
  "ldots" => "#x22d6",
  "vdots" => "#x22ee",
  "qed" => "#x25aa",
  "rfloor" => "#x230b", 
  "rceil" => "#x2309",
  "rang" => "#x29a5",
  "rangle" => "#x27e9"
}
  
NOTATION["cdots"] = "<mo>&#183;&#183;&#183;</mo>"
NOTATION["pmod"] = "&#xa0; mod"

## unary operators ("MOB")
UNARY_OPERATORS = generate "mo", 'lspace="thinmathspace" rspace="thinmathspace"', {
  "sum" => "#x2211",
  ["bigwedge", "Wedge"] => "#x22c0",
},
[ 
  ["bigcup", "Union"] => "#x22c3",
  ["product", "prod"] => "#x220f",
  ["coproduct", "coprod"] => "#x2210",
  ["bigotimes", "Otimes"] => "#x2a37",
  ["bigoplus", "Oplus"] => "#x2295",
]
#UNARY_OPERATORS["lim"] = "<mo lspace=\"thinmathspace\" rspace=\"thinmathspace\">lim</mo>"

## spaces
SPACES = {
  "," => '<mspace width="thinmathspace"/>',
  "thinspace" => '<mspace width="thinmathspace"/>',
  "medspace" => '<mspace width="mediummathspace"/>',
  " " => '<mspace width="mediummathspace"/>',
  "thickspace" => '<mspace width="thickmathspace"/>',
  "quad" => '<mspace width="verythickmathspace"/>',
  "!" => '<mspace width="-0.1667 em"/>',
  "negspace" => '<mspace width="-0.1667 em"/>',
}

## functions
MATH_FUNCTIONS = {}
%w(arccos arcsin arctan arg cos cosh cot coth csc deg det dim exp gcd 
  hom inf ker lg liminf linmsup ln log bmod mod max min Pr sec sin sinh 
  sup tan tanh).each do |x| 
  MATH_FUNCTIONS[x] = %{<mi>#{x}</mi>} 
end

TOKENS = {
  "-" => "&#x2212;",
  "&" => "&amp;",
  ">" => "&gt;",
  "<" => "&lt;",
}

ENTITIES = DEFAULTS.merge(NUMS).merge(GREEK).merge(OPERATORS).merge(NOTATION).merge(UNARY_OPERATORS).merge(SPACES).merge(MATH_FUNCTIONS)

end
end
